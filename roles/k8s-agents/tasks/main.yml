---
- name: add k8s repo
  yum_repository:
    name: kubernetes
    enabled: no
    description: MongoDB Repository
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
    gpgcheck: yes
    gpgkey:
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: install k8s tools
  yum:
    name: "{{ item }}-{{ k8s_version }}.*"
    enablerepo: kubernetes
    state: latest
  loop:
    - kubelet
    - kubectl

- name: make /etc/kubernetes skeleton
  file:
    name: /etc/kubernetes/{{ item }}
    state: directory
  loop:
    - pki
    - manifests

- name: make /var/lib/kubelet skeleton
  file:
    name: /var/lib/kubelet
    state: directory

- name: make cni directories (compatibility with aws-node)
  file:
    name: "{{ item }}"
    state: directory
  loop:
    - /opt/cni/bin
    - /etc/cni/net.d

# aws-cni gets copied into the host's /opt/cni/bin by the daemonset's host volume mapping
# so we just need the standard ones here to allow kubelet to be able to start it's infra containers
- name: install cni utilities
  unarchive:
    src: "https://github.com/containernetworking/plugins/releases/download/v{{ cni_version }}/cni-plugins-linux-{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}-v{{ cni_version }}.tgz"
    dest: /opt/cni/bin
    remote_src: yes

- name: make kubelet systemd drop-in directory
  file:
    name: /etc/systemd/system/kubelet.service.d
    state: directory

- name: copy kubelet-common drop-in
  copy:
    src: etc/systemd/system/kubelet.service.d/10-kubelet-common.conf
    dest: /etc/systemd/system/kubelet.service.d/10-kubelet-common.conf
    mode: 0644

- name: copy base kubelet config file
  copy:
    src: etc/kubernetes/kubelet/kubelet-config.json
    dest: /etc/kubernetes/kubelet/kubelet-config.json

# TODO: make drop-in for reading labels
# TODO: install traefik ingresscontroller locally
# TODO: install coredns locally
# TODO: install cilium locally

